pragma solidity >= 0.5.0 < 0.7.0;


/// @title Encryption key registry
/// @author Martin Strobl
/// @notice Stores user's public encription key generated by Metamask, the publicity of the key does not pose any security risk to the wallet/funds
contract EncKeyRegistry {
    /// mapping from address to encryption key
    mapping(address => string) public encKey;

    /// @notice Saves user's encryption key to the registry
    /// @param key encryption key to be stored as string
    function setKey(string memory key) public {
        encKey[msg.sender] = key;
    }

    /// @notice Retrieves the key of a given address
    /// @param _address target address
    /// @return encryption key as a string
    function getKey(address _address) public view returns (string memory) {
        return encKey[_address];
    }

    /// @notice Deletes user's encryption key from the registry
    function deleteKey() public  {
        delete encKey[msg.sender];
    }
}
